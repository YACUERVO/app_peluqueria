{"version":3,"sources":["app.js"],"names":["pagina","iniciarApp","mostrarServicios","mostrarSeccion","cambiarSeccion","document","querySelector","classList","add","querySelectorAll","forEach","enlace","addEventListener","evento","preventDefault","parseInt","target","dataset","paso","remove","async","resultado","fetch","db","json","servicios","servicio","id","nombre","precio","nombreServicio","createElement","textContent","precioServicio","servicioDiv","idServicio","onclick","seleccionarServicio","appendChild","error","console","log","elemento","tagName","parentElement","contains"],"mappings":"AAAA,IAAAA,OAAA,EAOA,SAAAC,aACAC,mBAGAC,iBAGAC,iBAGA,SAAAD,iBACAE,SAAAC,cAAA,SAAAN,QACAO,UAAAC,IAAA,oBAGAH,SAAAC,cAAA,eAAAN,YACAO,UAAAC,IAAA,UAKA,SAAAJ,iBACAC,SAAAI,iBAAA,sBACAC,QAAAC,IACAA,EAAAC,iBAAA,QAAAC,IACAA,EAAAC,iBAEAd,OAAAe,SAAAF,EAAAG,OAAAC,QAAAC,MAIAb,SAAAC,cAAA,qBAAAC,UAAAY,OAAA,oBACAd,SAAAC,cAAA,SAAAN,QACAO,UAAAC,IAAA,oBAGAH,SAAAC,cAAA,uBAAAC,UAAAY,OAAA,UAIAd,SAAAC,cAAA,eAAAN,YACAO,UAAAC,IAAA,cASAY,eAAAlB,mBACA,IACA,MAAAmB,QAAAC,MAAA,oBACAC,QAAAF,EAAAG,QACAC,UAAAA,GAAAF,EAIAE,EAAAf,QAAAgB,IACA,MAAAC,GAAAA,EAAAC,OAAAA,EAAAC,OAAAA,GAAAH,EAIAI,EAAAzB,SAAA0B,cAAA,KACAD,EAAAE,YAAAJ,EACAE,EAAAvB,UAAAC,IAAA,oBAIA,MAAAyB,EAAA5B,SAAA0B,cAAA,KACAE,EAAAD,YAAA,KAAAH,EACAI,EAAA1B,UAAAC,IAAA,oBAGA,MAAA0B,EAAA7B,SAAA0B,cAAA,OACAG,EAAA3B,UAAAC,IAAA,YACA0B,EAAAjB,QAAAkB,WAAAR,EAGAO,EAAAE,QAAAC,oBAGAH,EAAAI,YAAAR,GACAI,EAAAI,YAAAL,GAIA5B,SAAAC,cAAA,cAAAgC,YAAAJ,KAKA,MAAAK,GACAC,QAAAC,IAAAF,IAIA,SAAAF,oBAAAxB,GACA,IAAA6B,EAGAA,EADA,MAAA7B,EAAAG,OAAA2B,QACA9B,EAAAG,OAAA4B,cAGA/B,EAAAG,OAGA0B,EAAAnC,UAAAsC,SAAA,gBACAH,EAAAnC,UAAAY,OAAA,gBAEAuB,EAAAnC,UAAAC,IAAA,gBAnHAH,SAAAO,iBAAA,oBAAA,WACAX","file":"bundle.js","sourcesContent":["let pagina = 1; //variable global para que la app inicie en la seccion de servicios siempre\r\n\r\ndocument.addEventListener('DOMContentLoaded', function() {\r\n    iniciarApp();\r\n\r\n});\r\n\r\nfunction iniciarApp() {\r\n    mostrarServicios();\r\n\r\n    //resalta el div actual segun el tab al que se preciona\r\n    mostrarSeccion();\r\n\r\n    //oculta o muestra una seccion segun el tab al que se preciona\r\n    cambiarSeccion();\r\n}\r\n\r\nfunction mostrarSeccion() {\r\n    const seccionActual = document.querySelector(`#paso_${pagina}`);\r\n    seccionActual.classList.add('mostrar__seccion')\r\n\r\n    //resalta la navegación actual \r\n    const navegacion = document.querySelector(`[data-paso=\"${pagina}\"]`);\r\n    navegacion.classList.add('actual');\r\n\r\n}\r\n\r\n\r\nfunction cambiarSeccion() {\r\n    const enlaces = document.querySelectorAll('.navegacion button') //El método querySelectorAll() de un Element devuelve una NodeList estática (no viva) que representa una lista de elementos del documento que coinciden con el grupo de selectores indicados\r\n    enlaces.forEach(enlace => {\r\n        enlace.addEventListener('click', evento => {\r\n            evento.preventDefault();\r\n\r\n            pagina = parseInt(evento.target.dataset.paso); //para que lo tome como un numero \r\n\r\n            //eliminar mostrar__seccion de la seccion anterior\r\n\r\n            document.querySelector('.mostrar__seccion').classList.remove('mostrar__seccion');\r\n            const seccion = document.querySelector(`#paso_${pagina}`);\r\n            seccion.classList.add('mostrar__seccion')\r\n\r\n            //eliminar la clase de actual en el tab anterior\r\n            document.querySelector('.navegacion .actual').classList.remove('actual')\r\n\r\n\r\n            //agregar la clase de actual en el tab siguiente\r\n            const navegacion = document.querySelector(`[data-paso=\"${pagina}\"]`);\r\n            navegacion.classList.add('actual');\r\n\r\n\r\n        })\r\n    })\r\n}\r\n\r\n\r\n//try catch sirve si una concexion se pudo iniciar a una base de datos\r\nasync function mostrarServicios() { //funcion para validar la base de datos. En caso que no halla resultados sigue funcionando \r\n    try { //estamos llamando toda la hoja de servicios de servici.jason para llevarlo al HTML\r\n        const resultado = await fetch('./servicios.json'); //fetch para llamar la base de datos de jason\r\n        const db = await resultado.json(); //para saber el tipo de datos al estilo objetos en javas crip\r\n        const { servicios } = db;\r\n\r\n        //GENERAR EL HTML\r\n\r\n        servicios.forEach(servicio => {\r\n            const { id, nombre, precio } = servicio;\r\n\r\n            //DOM SCRIPTING\r\n            //generar el nombre\r\n            const nombreServicio = document.createElement('P')\r\n            nombreServicio.textContent = nombre\r\n            nombreServicio.classList.add('nombre__servicio')\r\n\r\n\r\n            //generar el precio del servicio\r\n            const precioServicio = document.createElement('P')\r\n            precioServicio.textContent = `$ ${precio}`;\r\n            precioServicio.classList.add('precio__servicio')\r\n\r\n            //generar div contenedor de servicio\r\n            const servicioDiv = document.createElement('DIV');\r\n            servicioDiv.classList.add('servicio');\r\n            servicioDiv.dataset.idServicio = id;\r\n\r\n            //selecionar un servicio para la cita\r\n            servicioDiv.onclick = seleccionarServicio;\r\n\r\n            //inyectar precio y nombre al div de servicio\r\n            servicioDiv.appendChild(nombreServicio);\r\n            servicioDiv.appendChild(precioServicio);\r\n            //El método appendChild() inserta un nuevo nodo dentro de la estructura DOM de un documento, y es la segunda parte del proceso central uno-dos, crear-y-añadir para construir páginas web a base de programación\r\n\r\n            //intectarlo en el HTML\r\n            document.querySelector('#servicios').appendChild(servicioDiv)\r\n\r\n        });\r\n\r\n\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n}\r\n\r\nfunction seleccionarServicio(evento) {\r\n    let elemento;\r\n\r\n    if (evento.target.tagName === 'P') {\r\n        elemento = evento.target.parentElement //forzo a js que si le doy click al parrafo se seleccione el DIV\r\n\r\n    } else {\r\n        elemento = evento.target; //si no doy clic en el parrafo pues es un click dentro del dv\r\n    }\r\n\r\n    if (elemento.classList.contains('seleccionado')) { //funcion contains: para veriricar si tienen un clase\r\n        elemento.classList.remove('seleccionado');\r\n    } else {\r\n        elemento.classList.add('seleccionado')\r\n    }\r\n\r\n\r\n}"]}