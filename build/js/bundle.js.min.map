{"version":3,"sources":["app.js"],"names":["iniciarApp","mostrarServicios","async","resultado","fetch","db","json","servicios","forEach","servicio","id","nombre","precio","nombreServicio","document","createElement","textContent","classList","add","precioServicio","servicioDiv","appendChild","querySelector","error","console","log","addEventListener"],"mappings":"AAKA,SAAAA,aACAC,mBAGAC,eAAAD,mBACA,IACA,MAAAE,QAAAC,MAAA,oBACAC,QAAAF,EAAAG,QACAC,UAAAA,GAAAF,EAIAE,EAAAC,QAAAC,IACA,MAAAC,GAAAA,EAAAC,OAAAA,EAAAC,OAAAA,GAAAH,EAIAI,EAAAC,SAAAC,cAAA,KACAF,EAAAG,YAAAL,EACAE,EAAAI,UAAAC,IAAA,oBAIA,MAAAC,EAAAL,SAAAC,cAAA,KACAI,EAAAH,YAAA,KAAAJ,EACAO,EAAAF,UAAAC,IAAA,oBAGA,MAAAE,EAAAN,SAAAC,cAAA,OACAK,EAAAH,UAAAC,IAAA,YAIAE,EAAAC,YAAAR,GACAO,EAAAC,YAAAF,GAIAL,SAAAQ,cAAA,cAAAD,YAAAD,KAKA,MAAAG,GACAC,QAAAC,IAAAF,IAjDAT,SAAAY,iBAAA,oBAAA,WACA1B","file":"bundle.js","sourcesContent":["document.addEventListener('DOMContentLoaded', function() {\r\n    iniciarApp();\r\n\r\n});\r\n\r\nfunction iniciarApp() {\r\n    mostrarServicios();\r\n}\r\n//try catch sirve si una concexion se pudo iniciar a una base de datos\r\nasync function mostrarServicios() { //funcion para validar la base de datos. En caso que no halla resultados sigue funcionando \r\n    try { //estamos llamando toda la hoja de servicios de servici.jason para llevarlo al HTML\r\n        const resultado = await fetch('./servicios.json'); //fetch para llamar la base de datos de jason\r\n        const db = await resultado.json(); //para saber el tipo de datos al estilo objetos en javas crip\r\n        const { servicios } = db;\r\n\r\n        //GENERAR EL HTML\r\n\r\n        servicios.forEach(servicio => {\r\n            const { id, nombre, precio } = servicio;\r\n\r\n            //DOM SCRIPTING\r\n            //generar el nombre\r\n            const nombreServicio = document.createElement('P')\r\n            nombreServicio.textContent = nombre\r\n            nombreServicio.classList.add('nombre__servicio')\r\n\r\n\r\n            //generar el precio del servicio\r\n            const precioServicio = document.createElement('P')\r\n            precioServicio.textContent = `$ ${precio}`;\r\n            precioServicio.classList.add('precio__servicio')\r\n\r\n            //generar div contenedor de servicio\r\n            const servicioDiv = document.createElement('DIV');\r\n            servicioDiv.classList.add('servicio');\r\n\r\n            //inyectar precio y nombre al div de servicio\r\n\r\n            servicioDiv.appendChild(nombreServicio);\r\n            servicioDiv.appendChild(precioServicio);\r\n            //El método appendChild() inserta un nuevo nodo dentro de la estructura DOM de un documento, y es la segunda parte del proceso central uno-dos, crear-y-añadir para construir páginas web a base de programación\r\n\r\n            //intectarlo en el HTML\r\n            document.querySelector('#servicios').appendChild(servicioDiv)\r\n\r\n        });\r\n\r\n\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n}"]}