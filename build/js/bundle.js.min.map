{"version":3,"sources":["app.js"],"names":["pagina","cita","nombre","fecha","hora","servicio","iniciarApp","mostrarServicios","mostrarSeccion","cambiarSeccion","paginaSiguiente","paginaAnterior","botonesPaginador","mostrarResumen","nombreCita","seccionAnterior","document","querySelector","classList","remove","add","navegacionAnterior","querySelectorAll","forEach","enlace","addEventListener","evento","preventDefault","parseInt","target","dataset","paso","async","resultado","fetch","db","json","servicios","id","precio","nombreServicio","createElement","textContent","precioServicio","servicioDiv","idServicio","onclick","seleccionarServicio","appendChild","error","console","log","elemento","tagName","parentElement","contains","eliminarServicio","agregarServicio","firstElementChild","nextElementSibling","filter","servicioObj","resumenDiv","Object","values","includes","noServicio","nombreTexto","value","trim","length"],"mappings":"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","file":"bundle.js","sourcesContent":["let pagina = 1; //variable global para que la app inicie en la seccion de servicios siempre\r\n\r\nconst cita = {\r\n    nombre: '',\r\n    fecha: '',\r\n    hora: '',\r\n    servicio: []\r\n}\r\n\r\ndocument.addEventListener('DOMContentLoaded', function() {\r\n    iniciarApp();\r\n\r\n});\r\n\r\nfunction iniciarApp() {\r\n    mostrarServicios();\r\n\r\n    //resalta el div actual segun el tab al que se preciona\r\n    mostrarSeccion();\r\n\r\n    //oculta o muestra una seccion segun el tab al que se preciona\r\n    cambiarSeccion();\r\n\r\n    //pagina sigueinte y anterior\r\n    paginaSiguiente()\r\n\r\n    paginaAnterior()\r\n\r\n    //comprueba la pagina actual para ocultar o mostrar la paginacion\r\n    botonesPaginador()\r\n\r\n    //muestra el resumen de la cita (o mensaje en caso de no pasar la validación)\r\n    mostrarResumen()\r\n\r\n    //almacena el nombre de la cita en el objeto\r\n    nombreCita()\r\n}\r\n\r\nfunction mostrarSeccion() {\r\n\r\n    //eliminar mostrar__seccion de la seccion anterior\r\n    const seccionAnterior = document.querySelector('.mostrar__seccion');\r\n    if (seccionAnterior) {\r\n        seccionAnterior.classList.remove('mostrar__seccion');\r\n    }\r\n\r\n    //agregar la clase mostrar seccion\r\n    const seccionActual = document.querySelector(`#paso_${pagina}`);\r\n    seccionActual.classList.add('mostrar__seccion')\r\n\r\n    const navegacionAnterior = document.querySelector('.navegacion .actual')\r\n    if (navegacionAnterior) {\r\n        //eliminar la clase de actual en el tab anterior\r\n        navegacionAnterior.classList.remove('actual')\r\n    }\r\n\r\n    //resalta la navegación actual\r\n    const navegacion = document.querySelector(`[data-paso=\"${pagina}\"]`);\r\n    navegacion.classList.add('actual');\r\n\r\n\r\n}\r\n\r\n\r\nfunction cambiarSeccion() {\r\n    const enlaces = document.querySelectorAll('.navegacion button') //El método querySelectorAll() de un Element devuelve una NodeList estática (no viva) que representa una lista de elementos del documento que coinciden con el grupo de selectores indicados\r\n    enlaces.forEach(enlace => {\r\n        enlace.addEventListener('click', evento => {\r\n            evento.preventDefault();\r\n\r\n            pagina = parseInt(evento.target.dataset.paso); //para que lo tome como un numero\r\n\r\n\r\n\r\n            // //agregar mostrar-seccion donde dimos click\r\n            // const seccion = document.querySelector(`#paso_${pagina}`);\r\n            // seccion.classList.add('mostrar__seccion')\r\n\r\n            // //eliminar la clase de actual en el tab anterior\r\n            // document.querySelector('.navegacion .actual').classList.remove('actual')\r\n\r\n\r\n            // //agregar la clase de actual en el tab siguiente\r\n            // const navegacion = document.querySelector(`[data-paso=\"${pagina}\"]`);\r\n            // navegacion.classList.add('actual');\r\n\r\n            //llamar la funcion de mostrar seccion\r\n            mostrarSeccion();\r\n            botonesPaginador();\r\n\r\n\r\n        })\r\n    })\r\n}\r\n\r\n\r\n//try catch sirve si una concexion se pudo iniciar a una base de datos\r\nasync function mostrarServicios() { //funcion para validar la base de datos. En caso que no halla resultados sigue funcionando\r\n    try { //estamos llamando toda la hoja de servicios de servici.jason para llevarlo al HTML\r\n        const resultado = await fetch('./servicios.json'); //fetch para llamar la base de datos de jason\r\n        const db = await resultado.json(); //para saber el tipo de datos al estilo objetos en javas crip\r\n        const { servicios } = db;\r\n\r\n        //GENERAR EL HTML\r\n\r\n        servicios.forEach(servicio => {\r\n            const { id, nombre, precio } = servicio;\r\n\r\n            //DOM SCRIPTING\r\n            //generar el nombre\r\n            const nombreServicio = document.createElement('P')\r\n            nombreServicio.textContent = nombre\r\n            nombreServicio.classList.add('nombre__servicio')\r\n\r\n\r\n            //generar el precio del servicio\r\n            const precioServicio = document.createElement('P')\r\n            precioServicio.textContent = `$ ${precio}`;\r\n            precioServicio.classList.add('precio__servicio')\r\n\r\n            //generar div contenedor de servicio\r\n            const servicioDiv = document.createElement('DIV');\r\n            servicioDiv.classList.add('servicio');\r\n            servicioDiv.dataset.idServicio = id;\r\n\r\n            //selecionar un servicio para la cita\r\n            servicioDiv.onclick = seleccionarServicio;\r\n\r\n            //inyectar precio y nombre al div de servicio\r\n            servicioDiv.appendChild(nombreServicio);\r\n            servicioDiv.appendChild(precioServicio);\r\n            //El método appendChild() inserta un nuevo nodo dentro de la estructura DOM de un documento, y es la segunda parte del proceso central uno-dos, crear-y-añadir para construir páginas web a base de programación\r\n\r\n            //intectarlo en el HTML\r\n            document.querySelector('#servicios').appendChild(servicioDiv)\r\n\r\n        });\r\n\r\n\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n}\r\n\r\nfunction seleccionarServicio(evento) {\r\n    let elemento;\r\n\r\n    if (evento.target.tagName === 'P') {\r\n        elemento = evento.target.parentElement //forzo a js que si le doy click al parrafo se seleccione el DIV\r\n\r\n    } else {\r\n        elemento = evento.target; //si no doy clic en el parrafo pues es un click dentro del dv\r\n    }\r\n\r\n    if (elemento.classList.contains('seleccionado')) { //funcion contains: para veriricar si tienen un clase\r\n        elemento.classList.remove('seleccionado');\r\n\r\n        const id = parseInt(elemento.dataset.idServicio); //para converitr a el numero \r\n\r\n        eliminarServicio(id);\r\n    } else {\r\n        elemento.classList.add('seleccionado')\r\n\r\n        // console.log(elemento.firstElementChild.nextElementSibling.textContent);//para vierificar el precio par allevarlo al obeto\r\n\r\n        const servicioObj = {\r\n                id: parseInt(elemento.dataset.idServicio), //para mirar a donde doy click\r\n                nombre: elemento.firstElementChild.textContent, //traer el nombre del elemento\r\n                precio: elemento.firstElementChild.nextElementSibling.textContent //traer el precio del elemento\r\n            }\r\n            // console.log(servicioObj)\r\n        agregarServicio(servicioObj);\r\n    }\r\n}\r\n\r\nfunction eliminarServicio(id) {\r\n    const { servicio } = cita;\r\n    cita.servicio = servicio.filter(servicios => servicios.id !== id); //El método filter() crea un nuevo array con todos los elementos que cumplan la condición implementada por la función dada.\r\n    console.log(cita)\r\n}\r\n\r\nfunction agregarServicio(servicioObj) {\r\n    const { servicio } = cita;\r\n    cita.servicio = [...servicio, servicioObj]; //codigo para que se vayan agregando los servicios  que requiere el usaurio \r\n    console.log(cita)\r\n\r\n}\r\n\r\n\r\nfunction paginaSiguiente() {\r\n    const paginaSiguiente = document.querySelector('#siguiente');\r\n    paginaSiguiente.addEventListener('click', () => {\r\n        pagina++;\r\n        console.log(pagina)\r\n        botonesPaginador();\r\n\r\n    })\r\n\r\n}\r\n\r\nfunction paginaAnterior() {\r\n    const paginaAnterior = document.querySelector('#anterior');\r\n    paginaAnterior.addEventListener('click', () => {\r\n        pagina--;\r\n        console.log(pagina);\r\n        botonesPaginador();\r\n\r\n    })\r\n}\r\n\r\nfunction botonesPaginador() {\r\n    const paginaSiguiente = document.querySelector('#siguiente');\r\n    const paginaAnterior = document.querySelector('#anterior');\r\n    if (pagina === 1) {\r\n        paginaAnterior.classList.add('ocultar');\r\n        paginaSiguiente.classList.remove('ocultar');\r\n\r\n        // } else if (pagina === 2) {\r\n        //     paginaAnterior.classList.remove('ocultar');\r\n        //     paginaSiguiente.classList.remove('ocultar')\r\n\r\n    } else if (pagina === 3) {\r\n        paginaSiguiente.classList.add('ocultar');\r\n        paginaAnterior.classList.remove('ocultar')\r\n\r\n    } else {\r\n        paginaAnterior.classList.remove('ocultar');\r\n        paginaSiguiente.classList.remove('ocultar')\r\n    }\r\n\r\n    mostrarSeccion(); //cambia la seccion que se muestra por la de la pagina\r\n}\r\n\r\nfunction mostrarResumen() {\r\n    //destruction\r\n    const { nombre, fecha, hora, servicios } = cita;\r\n\r\n    //seleccionar el resumen\r\n    const resumenDiv = document.querySelector('.contenido__resumen');\r\n\r\n    //validacion del objeto\r\n    if (Object.values(cita).includes('')) {\r\n        const noServicio = document.createElement('P');\r\n        noServicio.textContent = 'Faltan datos de servicios, hora fecha o nombre';\r\n\r\n        noServicio.classList.add('invalidar__cita');\r\n\r\n        //agregar a resumen Div\r\n\r\n        resumenDiv.appendChild(noServicio);\r\n    }\r\n}\r\n\r\nfunction nombreCita() {\r\n    const nombreInput = document.querySelector('#nombre')\r\n\r\n    nombreInput.addEventListener('input', (evento) => { //input: para validar si esta escribiendo en tiempo real\r\n        const nombreTexto = evento.target.value.trim(); //funcion trim para que no tome los espcacio en blanco al incio y al final \r\n        //console.log(nombreTexto); //para saber que es lo que esta escribiendo el usuario \r\n\r\n        //validacion de que el nombreTexto debe tener algo\r\n        if (nombreTexto === '' || nombreTexto.length < 3) {\r\n            console.log('nombre no valido')\r\n\r\n        } else {\r\n            // console.log('nombre valido')\r\n            cita.nombre = nombreTexto;\r\n            console.log(cita)\r\n        }\r\n    });\r\n}"]}